<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_CharBlue</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables
grav = 0.2;
hsp = 4;
vsp = 0;
jumpSpeed = 5;
moveSpeed = 4;
currSide = 0;
enabled = true;
currDirection = 0;
currSide = 0
rallyScore = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Basics
//Controls
if(enabled)
{
    keyBlue = keyboard_check_direct(ord("1"))
    keyGreen = keyboard_check_direct(ord("2"))
    keyRed = keyboard_check_direct(ord("3"))
    keyJump = keyboard_check_pressed(ord("W"));
    
    //React to controls
    if(vsp &lt; 10) vsp += grav;
    if(place_meeting(x,y+1,obj_Floor))
    {
        vsp = keyJump * -jumpSpeed;
    }

    motion_set(currDirection, hsp);
        
    //Collisions
    
    if(place_meeting(x+hsp, y, obj_LtoR))
    {
        obj_FloorRand.regenFloor = true;
        currDirection = 0;
        hsp += 0.1;
    } 
    
    if (place_meeting(x+hsp, y, obj_RtoL))
    {
        obj_FloorRand.regenFloor = true;
        currDirection = 180;
        hsp += 0.1;
    }
    
    if(place_meeting(x+hsp, y, par_Floor))
    {
        while(!place_meeting(x+sign(hsp),y, par_Floor))
        {
            x += sign(hsp);
        }
        hsp = 0;
    }
    
    if(place_meeting(x, y+vsp, par_Floor))
    {
        while(!place_meeting(x,y+sign(vsp), par_Floor))
        {
            y += sign(vsp);        
        }
        vsp = 0;
    }
    y += vsp;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Floor detection

//Fade jump

if(enabled)
{
    //Switch  
    
    if(keyBlue)
    {
        sprite_index = spr_CharBlue;
        currSide = 0;
    }
    
    if (keyGreen)
    {
        sprite_index = spr_CharGreen;
        currSide = 1;
    }
    
    if (keyRed)
    {
        sprite_index = spr_CharRed;
        currSide = 2;
    }
            
    //Floor detection
    if(place_meeting(x, y+1, obj_FloorBlue)) &amp;&amp; (currSide !=0)
    {
        enabled = false;
    }
    
    if(place_meeting(x, y+1, obj_FloorGreen)) &amp;&amp; (currSide !=1)
    {
        enabled = false;
    }
    
    if(place_meeting(x, y+1, obj_FloorRed)) &amp;&amp; (currSide !=2)
    {
        enabled = false;
    }
}
else
{
    instance_create(room_width/2, room_height/2, obj_BtnRetry)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();

draw_set_font(fnt_Main);
draw_set_color(c_black);
draw_set_halign(fa_center);
draw_text(room_width/2, room_height/2-350, "Match your colour to the floor. Use 1, 2 &amp; 3.")
draw_text(room_width/2, room_height/2-310, "Score")
draw_text(room_width/2, room_height/2-270, rallyScore)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>32,32</point>
    <point>32,32</point>
  </PhysicsShapePoints>
</object>
